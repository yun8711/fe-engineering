import{_ as s,v as a,b as l,R as n}from"./chunks/framework.8277b2e6.js";const F=JSON.parse('{"title":"nest-cli","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"nest/basic/nest-cli.md","filePath":"nest/basic/nest-cli.md","lastUpdated":1710299060000}'),o={name:"nest/basic/nest-cli.md"},e=n(`<h1 id="nest-cli" tabindex="-1">nest-cli <a class="header-anchor" href="#nest-cli" aria-label="Permalink to &quot;nest-cli&quot;">​</a></h1><p><a href="https://docs.nestjs.cn/10/cli" target="_blank" rel="noreferrer">文档</a></p><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>一个命令行界面工具，以帮助初始化、开发和维护 <code>Nest</code> 应用程序。包括搭建项目、以开发模式为其提供服务，以及为生产分发构建和打包应用程序。</p><p>安装：<code>pnpm install -g @nestjs/cli</code></p><p>验证：<code>nest -v</code>，输出版本号即为安装成功</p><br><h2 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h2><h3 id="new-创建项目" tabindex="-1">new 创建项目 <a class="header-anchor" href="#new-创建项目" aria-label="Permalink to &quot;new 创建项目&quot;">​</a></h3><p>创建并初始化一个新的 <code>Nest</code> 项目，会提示使用哪种包管理器。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nest</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">new</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">nam</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> [options]</span></span>
<span class="line"><span style="color:#FFCB6B;">nest</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">n</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">nam</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> [options]</span></span></code></pre></div><p>选项：</p><ul><li>--skip-git，-g：跳过 git 初始化</li><li>--package-manager [package-manager]，-g：指定包管理器，必须全局安装</li><li>--language [language]，-l：指定语言，TS/JS</li><li>--strict：默认 false，是否开启 ts 严格模式</li></ul><br><h3 id="generate-g-生成器" tabindex="-1">generate/g 生成器 <a class="header-anchor" href="#generate-g-生成器" aria-label="Permalink to &quot;generate/g 生成器&quot;">​</a></h3><p>用来快速生成各种代码，原理就是模板引擎，这些代码模版的集合是在 <a href="https://github.com/nestjs/schematics/tree/master/src/lib" target="_blank" rel="noreferrer">@nestjs/schematics</a> 这个包里。nest new 命令的底层就是 nest generate applicaion，加额外的 git init 和 npm install</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nest</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">generate</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">schemati</span><span style="color:#BABED8;">c</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">nam</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> [options]</span></span>
<span class="line"><span style="color:#FFCB6B;">nest</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">g</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">schemati</span><span style="color:#BABED8;">c</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">nam</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> [options]</span></span></code></pre></div><p>参数：</p><ul><li>name：生成组件的名称</li><li>schematic：要使用的模板，常用的有 <ul><li><code>app</code>：在 <code>monorepo</code> 中生成一个新应用程序，如果是标准项目结构，则转换为 <code>monorepo</code></li><li><code>resource</code>：快速生成一个模块，包含 crud 模板</li><li><code>library/lib</code>：在 <code>monorepo</code> 中生成一个新库，如果是标准项目结构，则转换为 <code>monorepo</code></li><li><code>controller/co</code>：控制器，即 controller 文件</li><li><code>module/mo</code>：模块，</li><li><code>service/s</code>：服务，即 service 文件</li><li><code>class/cl</code>：类</li><li><code>provider/pr</code>：提供者</li><li><code>decorator/d</code>：自定义装饰器</li><li><code>filter/f</code>：过滤器</li><li><code>gateway/ga</code>：网关</li><li><code>guard/gu</code>：守卫</li><li><code>interface</code>：接口</li><li><code>interceptor/in</code>：拦截器</li><li><code>middleware/mi</code>：中间件</li><li><code>pipe/pi</code>：管道</li><li><code>resolver/r</code>：解析器</li></ul></li></ul><p><em>示例：生成完整的模块</em></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nest</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">g</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">resource</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">user</span></span>
<span class="line"><span style="color:#89DDFF;">?</span><span style="color:#BABED8;"> What transport layer </span><span style="color:#89DDFF;font-style:italic;">do</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">you</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">use?</span><span style="color:#BABED8;"> (Use </span><span style="color:#C3E88D;">arrow</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">keys</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">❯</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">REST</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">API</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#FFCB6B;">GraphQL</span><span style="color:#BABED8;"> (code </span><span style="color:#C3E88D;">first</span><span style="color:#BABED8;">) </span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#FFCB6B;">GraphQL</span><span style="color:#BABED8;"> (schema </span><span style="color:#C3E88D;">first</span><span style="color:#BABED8;">) </span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#FFCB6B;">Microservice</span><span style="color:#BABED8;"> (non-HTTP) </span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#FFCB6B;">WebSockets</span></span></code></pre></div><br><p><em>示例：生成 controller</em></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nest</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">g</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">co</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">demo</span></span>
<span class="line"><span style="color:#FFCB6B;">CREATE</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">src/demo/demo.controller.spec.ts</span><span style="color:#BABED8;"> (478 </span><span style="color:#C3E88D;">bytes</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">CREATE</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">src/demo/demo.controller.ts</span><span style="color:#BABED8;"> (97 </span><span style="color:#C3E88D;">bytes</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">UPDATE</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">src/app.module.ts</span><span style="color:#BABED8;"> (322 </span><span style="color:#C3E88D;">bytes</span><span style="color:#BABED8;">)</span></span></code></pre></div><br><h3 id="start-运行" tabindex="-1">start 运行 <a class="header-anchor" href="#start-运行" aria-label="Permalink to &quot;start 运行&quot;">​</a></h3><p>编译并运行应用程序或工作空间中的默认项目</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nest</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">start</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">nam</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> [options]</span></span></code></pre></div><p><strong>选项</strong></p><ul><li><code>--watch，-w</code>：在监视模式下运行，实时重载，即实时自动 build</li><li><code>--debug [hostport]，-d</code>：在debug模式运行，使用–inspect标识</li><li><code>--exec [binary]，-e</code>：使用哪种运行时运行二进制文件（默认：<code>node</code>），也可指定别的运行时</li><li><code>--preserveWatchOutput</code>：在watch模式下，保存命令行输出内容而不是清空屏幕（仅在<code>tsc watch</code>模式下)</li><li>其他选项与 build 命令基本一致</li></ul><h3 id="build-构建" tabindex="-1">build 构建 <a class="header-anchor" href="#build-构建" aria-label="Permalink to &quot;build 构建&quot;">​</a></h3><p>将应用程序或工作区编译到输出文件夹中。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nest</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">build</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">nam</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> [options]</span></span></code></pre></div><ul><li><code>--path [path]，-p</code>：<code>tsconfig</code>文件的路径</li><li><code>--watch，-w</code>：在监视模式下运行，可以实时重载，自动 build，但是默认只监听 ts/js 文件，</li><li><code>--watchAssets</code>：会连同别的文件一同监听变化，比如 md、yml 等文件</li><li><code>--webpack</code>：使用 <code>webpack</code> 进行编译</li><li><code>--webpackPath</code>：配置 <code>webpack</code> 的路径</li><li><code>--tsc</code>：强制使用 <code>tsc</code> 编译</li><li><code>--config</code>：指定 nest cli 的配置文件</li></ul><p>tsc 不做打包、webpack 会做打包，两种方式都可以，node 模块本来就不需要打包，但是打包成单模块会提升加载的性能。</p><h3 id="info-查看信息" tabindex="-1">info 查看信息 <a class="header-anchor" href="#info-查看信息" aria-label="Permalink to &quot;info 查看信息&quot;">​</a></h3><p>显示项目信息，包括 nest 安装的包和其他系统信息，node、npm 和依赖版本，例如：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">liuyun@iMac</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;"></span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">~/Desktop/test2/nest-demo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;"></span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;"></span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">main</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;"></span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">nest</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">info</span><span style="color:#BABED8;">         </span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">_</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">_</span><span style="color:#BABED8;">             </span><span style="color:#C3E88D;">_</span><span style="color:#BABED8;">      </span><span style="color:#C3E88D;">___</span><span style="color:#BABED8;">  </span><span style="color:#C3E88D;">_____</span><span style="color:#BABED8;">  </span><span style="color:#C3E88D;">_____</span><span style="color:#BABED8;">  </span><span style="color:#C3E88D;">_</span><span style="color:#BABED8;">     </span><span style="color:#C3E88D;">_____</span></span>
<span class="line"><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">\\</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">           </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">_</span><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">/</span><span style="color:#BABED8;">  </span><span style="color:#C3E88D;">___</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">/</span><span style="color:#BABED8;">  </span><span style="color:#C3E88D;">__</span><span style="color:#BABED8;"> \\| </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">   </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">_</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">_</span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">  </span><span style="color:#FFCB6B;">\\</span><span style="color:#BABED8;">| </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">  </span><span style="color:#FFCB6B;">___</span><span style="color:#BABED8;">  </span><span style="color:#C3E88D;">___</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">_</span><span style="color:#BABED8;">     </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">\\</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">--.</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">/</span><span style="color:#C3E88D;">  </span><span style="color:#BABED8;">\\/</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">     </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#82AAFF;">.</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">/</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">_</span><span style="color:#BABED8;"> \\/ </span><span style="color:#C3E88D;">__</span><span style="color:#89DDFF;">||</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">__</span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">--.</span><span style="color:#C3E88D;"> </span><span style="color:#BABED8;">\\|</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">    </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">     </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">\\</span><span style="color:#C3E88D;">  </span><span style="color:#89DDFF;">||</span><span style="color:#C3E88D;">  </span><span style="color:#FFCB6B;">__/\\__</span><span style="color:#C3E88D;"> </span><span style="color:#BABED8;">\\|</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">_</span><span style="color:#C3E88D;"> /</span><span style="color:#BABED8;">\\_</span><span style="color:#C3E88D;">_/ //</span><span style="color:#BABED8;">\\_</span><span style="color:#C3E88D;">_/ /</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">\\__/\\</span><span style="color:#C3E88D;">| </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">_____</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">_</span></span>
<span class="line"><span style="color:#FFCB6B;">\\_</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">\\_/</span><span style="color:#C3E88D;"> </span><span style="color:#BABED8;">\\_</span><span style="color:#C3E88D;">__</span><span style="color:#89DDFF;">||</span><span style="color:#FFCB6B;">___/</span><span style="color:#C3E88D;"> </span><span style="color:#BABED8;">\\_</span><span style="color:#C3E88D;">_</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">\\____/</span><span style="color:#C3E88D;"> </span><span style="color:#BABED8;">\\_</span><span style="color:#C3E88D;">___/  </span><span style="color:#BABED8;">\\_</span><span style="color:#C3E88D;">___/</span><span style="color:#BABED8;">\\_</span><span style="color:#C3E88D;">____/</span><span style="color:#BABED8;">\\_</span><span style="color:#C3E88D;">__/</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">System Information</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#FFCB6B;">OS</span><span style="color:#C3E88D;"> Version     : macOS Unknown</span></span>
<span class="line"><span style="color:#FFCB6B;">NodeJS</span><span style="color:#C3E88D;"> Version : v14.21.3</span></span>
<span class="line"><span style="color:#FFCB6B;">PNPM</span><span style="color:#C3E88D;"> Version    : </span><span style="color:#F78C6C;">8.3</span><span style="color:#C3E88D;">.1 </span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">Nest CLI</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#FFCB6B;">Nest</span><span style="color:#C3E88D;"> CLI Version : </span><span style="color:#F78C6C;">9.0</span><span style="color:#C3E88D;">.0 </span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">Nest Platform Information</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#FFCB6B;">platform-express</span><span style="color:#C3E88D;"> version : </span><span style="color:#F78C6C;">9.0</span><span style="color:#C3E88D;">.0</span></span>
<span class="line"><span style="color:#FFCB6B;">schematics</span><span style="color:#C3E88D;"> version       : </span><span style="color:#F78C6C;">9.0</span><span style="color:#C3E88D;">.0</span></span>
<span class="line"><span style="color:#FFCB6B;">testing</span><span style="color:#C3E88D;"> version          : </span><span style="color:#F78C6C;">9.0</span><span style="color:#C3E88D;">.0</span></span>
<span class="line"><span style="color:#FFCB6B;">common</span><span style="color:#C3E88D;"> version           : </span><span style="color:#F78C6C;">9.0</span><span style="color:#C3E88D;">.0</span></span>
<span class="line"><span style="color:#FFCB6B;">core</span><span style="color:#C3E88D;"> version             : </span><span style="color:#F78C6C;">9.0</span><span style="color:#C3E88D;">.0</span></span>
<span class="line"><span style="color:#FFCB6B;">cli</span><span style="color:#C3E88D;"> version              : </span><span style="color:#F78C6C;">9.0</span><span style="color:#C3E88D;">.0</span></span></code></pre></div><h2 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h2><p>Nest在<code>nest-cli.json</code>文件中保留了组织、创建和部署标准项目和monorepo结构项目的元数据。</p><p>一般情况下，在通过 nest-cli 添加项目时会自动更新配置文件，但是有些配置需要手动修改。</p><h3 id="顶层属性" tabindex="-1">顶层属性 <a class="header-anchor" href="#顶层属性" aria-label="Permalink to &quot;顶层属性&quot;">​</a></h3><ul><li><code>collection</code>：用于配置生成部件的schematics组合的点，一般不需要改变这个值。</li><li><code>sourceRoot</code>：标准模式中单项目源代码根入口，或者monorepo模式结构中的默认项目。</li><li><code>compilerOptions</code>：全局编译器选项，用于指定编译选项和选项的设置；详见后文。</li><li><code>generateOptions</code>：全局生成器选项，用于指定全局生成的选项和选项的设置；详见后文。</li><li><code>monorepo</code>：（仅用于monorepo）在monorepo结构中，该设置始终为<code>true</code>。</li><li><code>root</code>：（仅用于monorepo）默认项目的项目根目录。</li></ul><h3 id="compileroptions" tabindex="-1">compilerOptions <a class="header-anchor" href="#compileroptions" aria-label="Permalink to &quot;compilerOptions&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">属性名称</th><th style="text-align:left;">值类型</th><th>默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>webpack</code></td><td style="text-align:left;"><code>boolean</code></td><td>false，在 monorepo 模式下默认为 true</td><td style="text-align:left;">如果为<code>true</code>，使用<code>webpack compiler</code>。如果<code>false</code>或者不存在，使用<code>tsc</code></td></tr><tr><td style="text-align:left;"><code>tsConfigPath</code></td><td style="text-align:left;"><code>string</code></td><td></td><td style="text-align:left;">（仅用于monorepo）指定<code>tsconfig.json</code>文件的路径，在使用<code>nest build</code>或者<code>nest start</code>而未指定<code>project</code>选项时将使用该设置（例如，默认项目在构建或启动时）</td></tr><tr><td style="text-align:left;"><code>webpackConfigPath</code></td><td style="text-align:left;"><code>string</code></td><td></td><td style="text-align:left;">webpack选项文件，如果不指定，Nest会查找<code>webpack.config.js</code>。详见后文。</td></tr><tr><td style="text-align:left;"><code>deleteOutDir</code></td><td style="text-align:left;"><code>boolean</code></td><td></td><td style="text-align:left;">如果为<code>true</code>，无论编译器是否激活， 首先会移除汇编输出目录（在<code>tsconfig.json</code>中配置，默认<code>./dist</code>)。</td></tr><tr><td style="text-align:left;"><code>assets</code></td><td style="text-align:left;"><code>array</code></td><td></td><td style="text-align:left;">当编译步骤开始时，使能非Typescript资源文件的自动部署（在–watch模式下，资源文件在增量编译时不会部署）。详见后文</td></tr><tr><td style="text-align:left;"><code>watchAssets</code></td><td style="text-align:left;"><code>boolean</code></td><td></td><td style="text-align:left;">如果为<code>true</code>，在watch模式运行时，监视所有非Typescript资源文件（如果要更精确控制要监控的资源文件，见后续<strong>资源文件</strong>章节）。</td></tr></tbody></table><h3 id="generateoptions" tabindex="-1">generateOptions <a class="header-anchor" href="#generateoptions" aria-label="Permalink to &quot;generateOptions&quot;">​</a></h3><p>指定<code>nest generate</code>指令的默认生成选项：</p><ul><li>spec：boolean 或 object， <ul><li>如果值为 boolean，用于指定是否默认生成 spec 测试文件，可以使用<code>--flag</code>来覆盖该配置</li><li>如果值为 object，每个键代表一个 schematic 名称，而它的值也为 boolean，表示是否为特定的 schematic 生成 spce</li></ul></li></ul><p><em>示例</em></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 在所有项目中禁用spec文件生成</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">generateOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">spec</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">false</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// spec文件生成仅在service的schematics被禁用</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">generateOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">spec</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">service</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">false</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,50),p=[e];function t(c,r,y,D,i,B){return a(),l("div",null,p)}const E=s(o,[["render",t]]);export{F as __pageData,E as default};
