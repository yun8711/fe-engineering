import{_ as s,v as e,b as n,R as p}from"./chunks/framework.8277b2e6.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep","prev":false,"next":true},"headers":[],"relativePath":"docs/eslint/eslint-plugin-prettier.md","filePath":"docs/eslint/eslint-plugin-prettier.md","lastUpdated":1708623445000}'),l={name:"docs/eslint/eslint-plugin-prettier.md"},a=p(`<h1>插件：eslint-plugin-prettier</h1><p>v5.1.3</p><p><a href="https://github.com/prettier/eslint-plugin-prettier" target="_blank" rel="noreferrer">github</a></p><p>一个 eslint 插件，作用是：<strong>将 Prettier 应用到 ESLint 中，把 Prettier 作为单个 ESLint 规则运行，并将检查结果作为单个 ESLint 问题</strong>。</p><p>可以在使用 ESLint 进行代码检查的同时，自动格式化代码，使其符合 Prettier 的规则</p><h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h2><p>1、安装：</p><p><code>pnpm add -D eslint-plugin-prettier eslint-config-prettie</code>，还需要手动安装eslint、prettier</p><p>一般在使用 eslint-plugin-prettier 时都会同时安装eslint-config-prettie，用来关闭 eslint 中与 prettier 有冲突的规则。</p><p>2、配置</p><p>（1）在 <code>.eslintrc*</code> 文件中</p><p>该插件附带一个 <code>plugin:prettier/recommended</code> 配置，可以一次性设置 <code>eslint-plugin-prettier</code> <code>eslint-config-prettier</code>两者</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">extends</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">plugin:prettier/recommended</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>上述的配置，会完成以下工作：</p><ul><li>启用<code>prettier/prettier</code> 规则</li><li>启用<code>eslint-config-prettier</code>配置</li><li>禁用有问题的 <code>arrow-body-style</code> 和 <code>prefer-arrow-callback</code> 规则，原因：使用 prettier 时，eslint --fix 无法正常修复 pre-fer-arrow-callback，两者有冲突</li></ul><p>（2）在 <code>eslint.config.js</code> 文件中</p><p>此插件附带了一个 <code>eslint-plugin-prettier/recommended</code> 配置，可以一次性设置 <code>eslint-plugin-prettier</code> <code>eslint-config-prettier</code>两者，</p><p>导入 <code>eslint-plugin-prettier/recommended</code> 并将其添加为 <code>eslint.config.js</code> 文件中配置数组中的最后一项</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> eslintPluginPrettierRecommended </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">eslint-plugin-prettier/recommended</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Any other config imports go at the top</span></span>
<span class="line"><span style="color:#BABED8;">  eslintPluginPrettierRecommended</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>两种配置方式实现的效果是一样的。</p><h2 id="配置选项" tabindex="-1">配置选项 <a class="header-anchor" href="#配置选项" aria-label="Permalink to &quot;配置选项&quot;">​</a></h2><blockquote><p>虽然可以通过 ESLint 配置文件将选项传递给 Prettier，但是不建议这样做，因为编辑器的扩展会读取<code>.prettierrc</code>，但是不会从 eslint 读取配置。</p></blockquote><p>可以在 eslint 配置中直接给插件传递配置项，例如：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">prettier/prettier</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">singleQuote</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">parser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">flow</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">usePrettierrc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">false,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">fileInfoOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">withNodeModules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>第一个对象参数，用来传递给 prettier，就一些 prettier 的具体规则</p><p>第二个对象参数：</p><ul><li>usePrettierrc：表示是否加载 prettier 配置文件，默认为 true</li><li>fileInfoOptions：传递给 prettier.getFileInfo（prettier 进行格式化时的 api），用来决定是否需要格式化某些特定的文件，例如 <code>&quot;withNodeModules&quot;: true</code>表示不忽略 node_modules 目录中的文件。更多规则查看 <a href="https://prettier.io/docs/en/api.html#prettiergetfileinfofileurlorpath--options" target="_blank" rel="noreferrer">prettier 文档</a></li></ul>`,27),o=[a];function t(r,c,i,D,F,y){return e(),n("div",null,o)}const B=s(l,[["render",t]]);export{u as __pageData,B as default};
