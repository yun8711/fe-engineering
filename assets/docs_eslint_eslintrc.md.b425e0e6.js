import{_ as s,v as n,b as l,R as a}from"./chunks/framework.8277b2e6.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/eslint/eslintrc.md","filePath":"docs/eslint/eslintrc.md","lastUpdated":1710299060000}'),e={name:"docs/eslint/eslintrc.md"},p=a(`<h1>.eslintrc* 配置详解</h1><h2 id="配置项" tabindex="-1">配置项 <a class="header-anchor" href="#配置项" aria-label="Permalink to &quot;配置项&quot;">​</a></h2><h3 id="parser-解析器" tabindex="-1">parser - 解析器 <a class="header-anchor" href="#parser-解析器" aria-label="Permalink to &quot;parser - 解析器&quot;">​</a></h3><p>指定要用作解析器的 npm 模块</p><p>阅读完 <a href="./parser">parser</a> 的内容后，可以总结出这样几个规律：</p><p>1、默认不配置时使用 <strong><a href="https://github.com/eslint/espree" target="_blank" rel="noreferrer">Espree</a></strong> 解析器，但它对新语法特性的支持度不高，在一些特定场景下并不适合</p><p>2、只检验 js 代码，一般使用 <strong>@babel/eslint-parser</strong>（也就是 babel-eslint），能够支持最新的语法和实验性语法，兼容性好，配合 babel 的插件，功能更丰富</p><p>3、如果对 ts 代码进行 lint，使用 <strong>@typescript-eslint/parser</strong>，它专门解析 ts 语法</p><p>4、如果是 react 代码，使用 @babel/eslint-parser，因为它本身支持 jsx ，但不代表完全支持 react 特定的语法。所以仍然需要在 parserOptions中传递一些配置参数</p><p>5、如果是 vue 项目，比较特殊的是sfc 的 template不是正常的 html 标签，所以使用专门的 <strong>vue-eslint-parser</strong> 解析器</p><br><h3 id="parseroptions-解析器配置" tabindex="-1">parserOptions - 解析器配置 <a class="header-anchor" href="#parseroptions-解析器配置" aria-label="Permalink to &quot;parserOptions - 解析器配置&quot;">​</a></h3><p>parserOptions的配置将会传递到解析器中，被解析器获取，进行一定的处理。</p><p>该选项的定义：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ParserOptions</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">ecmaVersion</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">5</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">6</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">7</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">8</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">9</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">10</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">11</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">12</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2015</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2016</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2017</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2018</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2019</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2020</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2021</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2022</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">latest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">sourceType</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">script</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">allowReserved</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">ecmaFeatures</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">globalReturn</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">impliedStrict</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">jsx</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">experimentalObjectRestSpread</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">        [</span><span style="color:#BABED8;font-style:italic;">key</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    [</span><span style="color:#BABED8;font-style:italic;">key</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>ecmaVersion：指定在源码中使用的 ECMAScript 版本，默认为 5。这里只是说语法，不包括 ES 的全局变量，全局变量需要在 env 中定义</li><li>sourecType：指定要解析的代码类型，可选项： <ul><li>script：默认，会把源码解析为一个传统意义上的脚本文件，script标签引入</li><li>module： ESM模式，会把源码解析为 es 模块文件，用 import / export 的语法必须用 module</li></ul></li><li>ecmaFeatures：object，用于启用一些实验性或非标准的语法特性 <ul><li>experimentalObjectRestSpread：指定是否启用实验性的对象 rest/spread 属性</li><li>jsx：boolean，是否启用 jsx 语法</li><li>globalReturn：boolean，是否允许在全局作用域中使用 return 语句</li><li>impliedStrict：boolean，是否启用隐式严格模式，开启全局 script 模式</li></ul></li></ul><p>上面是 eslint 标准的配置项，不同的解析器可能对 <code>parserOptions</code> 中的某些选项有所差异，需要根据具体的解析器和代码需求来进行配置，比如下面的</p><ul><li>project：用于指定 TypeScript 项目的目录路径</li><li>tsconfigRootDir：用于指定 TypeScript 的根目录路径</li><li>extraFileExtensions：用于指定自定义文件扩展名，以便解析器能够正确地解析这些文件</li><li>babelOptions：用于指定 Babel 转换器的选项</li></ul><p><code>eslint-plugin-vue</code> 插件使用<code>vue-eslint-parser</code>作为解析器，它只能解析vue 文件中的html 部分，不会检测 script 中的 js 内容。由于解析器只有一个，用了<code>vue-eslint-parser</code>就不能用<code>babel-eslint</code>。所以<code>vue-eslint-parser</code>的做法是，在解析器选项中，再传入一个解析器选项parser，从而在内部处理<code>babel-eslint</code>，检测<code>&lt;script&gt;</code>中的js代码</p><p><em>@babel/eslint-parser</em></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">parser</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@babel/eslint-parser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">parserOptions</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">requireConfigFile</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">babelOptions</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">babelrc</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">configFile</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// your babel options</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">presets</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@babel/preset-env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><p>requireConfigFile：是否需要读取 Babel 配置文件。默认情况下为 true，@babel/eslint-parser 会尝试读取项目中的 <code>.babelrc</code> 或 <code>.babelrc.js</code> 文件，并根据其中的配置信息来解析代码；如果设置为 <code>false</code>，则只使用默认的解析器选项进行解析。推荐设置为 true，以确保代码的正确解析和检查效果。</p><p>babelOptions：一个包含 babel 配置项的对象，在运行时传递给 babel 解析器</p><br><h3 id="env-运行环境" tabindex="-1">env - 运行环境 <a class="header-anchor" href="#env-运行环境" aria-label="Permalink to &quot;env - 运行环境&quot;">​</a></h3><p>用于定义代码的运行环境，定义为 true 的环境，代码会获得特定环境的全局定义，会跳过对其的检测，否则会被认为变量未定义。</p><p>默认情况下，所有环境变量都为false，配置时可以自由选择搭配，可以选择多个。 常见的环境有：</p><ul><li>browser：浏览器全局变量</li><li>node：Node.js 全局变量和作用域</li><li>es6： 启用除了 modules 以外的所有 ECMAScript 6 特性（该选项会自动设置 ecmaVersion 解析器选项为 6）</li><li>amd：将 <code>require()</code> 和 <code>define()</code> 定义为像 amd 一样的全局变量</li><li>commonjs：CommonJS 全局变量和作用域，用于 Browserify/Webpack 打包只在浏览器中运行的代码</li><li>jquery：jQuery 全局变量</li><li>worker：Web Workers 全局变量</li></ul><br><h3 id="globals-全局变量" tabindex="-1">globals - 全局变量 <a class="header-anchor" href="#globals-全局变量" aria-label="Permalink to &quot;globals - 全局变量&quot;">​</a></h3><p>用于定义代码中使用的全局变量（注意与 env 的区别），key 值就是要添加的全局变量，value 值可以是：</p><ul><li>true：表示允许在代码中使用该全局变量，Eslint 检查时不会报未定义的错误</li><li>false：表示禁止使用该全局变量</li><li>字符串： <ul><li>readonly只读，不可修改；</li><li>writable可写；</li><li>off 禁止使用</li></ul></li></ul><br><h3 id="plugins-插件" tabindex="-1">plugins - 插件 <a class="header-anchor" href="#plugins-插件" aria-label="Permalink to &quot;plugins - 插件&quot;">​</a></h3><p>eslint本身只是一个代码检测工具，默认有解析器 Espree 也只能检测纯 js 代码，如果需要对其他类型的源码（如<code>.vue</code>、<code>.jsx</code>等）进行检测和提供校验规则，就需要引入一些插件来扩展 ESLint 的检查功能和规则。</p><p>插件的作用类似于解析器，用以扩展解析器的功能，检测非常规的js代码，也可能会新增一些特定的规则。</p><p>eslint相关插件命名格式：前缀必须为 <code>eslint-plugin- </code>，在引入项目使用时可以省略，以<code>@</code>开头的表示带命名空间的，正常引入即可</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [        </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jquery</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 是指 eslint-plugin-jquery        </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@jquery/jquery</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">// 是指 @jquery/eslint-plugin-jquery        </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@foobar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 是指 @foobar/eslint-plugin    ]</span></span>
<span class="line"><span style="color:#F07178;">}</span></span></code></pre></div><p>当需要基于插件进行 extends 和 rules 的配置时，需要加上插件的引用，如：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jquery</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">// eslint-plugin-jquery</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@foo/foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// @foo/eslint-plugin-foo</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@bar,      // @bar/eslint-plugin</span></span>
<span class="line"><span style="color:#F07178;">    ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">extends</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">plugin:jquery/recommended</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">plugin:@foo/foo/recommended</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">plugin:@bar/recommended</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">    ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">rules</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jquery/a-rule</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@foo/foo/some-rule</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@bar/another-rule</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><strong>优先级</strong></p><ul><li>如果extends配置的是一个数组，那么最终会将所有规则项进行合并，后出现的优先级高</li><li>通过rults单独配置的规则优先级比extends高</li></ul><br><h3 id="extends-继承" tabindex="-1">extends - 继承 <a class="header-anchor" href="#extends-继承" aria-label="Permalink to &quot;extends - 继承&quot;">​</a></h3><p>用于继承其他配置文件的规则，可以避免手动配置大量的规则，提高代码检查效率。选项值可以是一个字符串或者一个字符串数组，每个字符串表示一个配置文件或插件。</p><p>ESLint 会按照指定顺序读取指定的配置文件，并将其中的规则和选项深度合并到当前的配置中。</p><p><strong>注意</strong>：后面的配置会覆盖前面的配置。</p><p>继承的书写方式：</p><ul><li>预设配置：ESLint 内置的配置，&quot;eslint:recommended&quot;、&quot;eslint:all&quot;</li><li>插件配置：eslint-plugin-xxx，可简写为 xxx，插件本身导出的就是个 eslint 配置</li><li>从插件中获取的规则，<code>plugin:插件包名/配置名</code>，其中插件包名也可以省略前缀 <code>eslint-config-</code>，如<code>plugin:vue/essential</code></li><li>从其他文件中继承，即继承另外的一个配置文件，如<code>./node_modules/coding-standard/eslintDefaults.js</code></li></ul><p>可继承的规则一般有这几种来源：</p><ul><li>eslint 内置推荐规则，不需要额外安装依赖，如：<code>eslint:recommended</code>、<code>eslint:all</code></li><li>其他开发者共享的配置，以 npm 包的形式共享，使用前需要先安装</li></ul><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">extends</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#BABED8;">        &#39;eslint:recommended&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 是 ESLint 官方的扩展,内置推荐规则</span></span>
<span class="line"><span style="color:#BABED8;">        &#39;plugin:vue/essential&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 是插件类型扩展</span></span>
<span class="line"><span style="color:#BABED8;">        &#39;eslint-config-standard&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// eslint-config 开头的都可以省略掉前面 直接使用standard即可</span></span>
<span class="line"><span style="color:#BABED8;">        &#39;@vue/prettier&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// @开头扩展和 eslint-config 一样，只是在 npm 包上面加了一层作用域 scope；</span></span>
<span class="line"><span style="color:#BABED8;">        &#39;./node_modules/coding-standard/.eslintrc-es</span><span style="color:#F78C6C;">6</span><span style="color:#BABED8;">&#39; </span><span style="color:#676E95;font-style:italic;">// 一个执行配置文件的路径</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><br><h3 id="settings-自定义规则" tabindex="-1">settings - 自定义规则 <a class="header-anchor" href="#settings-自定义规则" aria-label="Permalink to &quot;settings - 自定义规则&quot;">​</a></h3><p>主要用于指定一些自定义的配置和参数，在具体应用中可能有不同的用法</p><p>用于指定一些自定义的配置信息和参数。选项值是一个对象，可以包含多个属性，下面是几个示例：</p><p>（1）<code>settings.react</code>：用于指定 React 相关的配置信息。它可以是一个对象，包含以下几个属性：</p><ul><li><code>version</code>：表示使用的 React 版本号，可以是一个字符串或数字</li><li><code>pragma</code>：表示在源代码中使用哪种函数作为 JSX 的编译入口，默认为 <code>&quot;React.createElement&quot;</code></li><li><code>fragment</code>：表示在源代码中使用哪种语法来表示组件 fragment，默认为 <code>&quot;React.Fragment&quot;</code></li></ul><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">settings</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">react</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">detect</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">pragma</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>（2）<code>settings.vue</code> 属性用于指定 Vue.js 相关的配置信息。它可以是一个对象，包含以下几个属性：</p><ul><li><code>compiler</code>：表示使用的 Vue.js 编译器版本号。</li><li><code>preprocessStyles</code>：表示自定义预处理 CSS 样式的函数或函数数组。</li><li><code>preprocessCustomBlocks</code>：表示自定义预处理 Vue 单文件组件中的自定义块（如 <code>&lt;i18n&gt;</code>、<code>&lt;docs&gt;</code> 等）</li></ul><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">settings</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">compiler</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^2.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">preprocessStyles</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">preprocessCustomBlocks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> function (content</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> id) {</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#676E95;font-style:italic;">// 自定义预处理函数</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">}</span></span></code></pre></div><p>（3）在 element-plus 的源码中</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">settings</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 用来解决模块导入路径的问题</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 指定 eslint-import-resolver-node 插件提供的 Node.js 解析器，将文件扩展名限制为 .js, .mjs, .ts, .d.ts, 和 .tsx</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">import/resolver</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      node</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> extensions</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.mjs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.d.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.tsx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span></code></pre></div><br><h3 id="root-根目录标识" tabindex="-1">root - 根目录标识 <a class="header-anchor" href="#root-根目录标识" aria-label="Permalink to &quot;root - 根目录标识&quot;">​</a></h3><p>用于指定配置文件的根目录。</p><p>当使用 ESLint 检查代码时，ESLint 会从代码所在的目录开始向上查找配置文件，直到找到配置文件为止。如果没有找到配置文件，则会使用默认的配置。</p><p>当配置了 <code>root</code> 选项时，ESLint 将只会在指定的根目录下查找配置文件，而不会继续向上查找。这个选项通常用于在多个项目中共享一个通用的配置文件</p><br><h3 id="rules-规则集" tabindex="-1">rules - 规则集 <a class="header-anchor" href="#rules-规则集" aria-label="Permalink to &quot;rules - 规则集&quot;">​</a></h3><p>用于配置具体的检查规则和错误级别。当代码中存在某种规则违反了预设的检查规则时，ESLint 会提供相应的提示或报错，并根据错误级别进行分类。</p><p>配置项是一个对象，其中的属性名表示要启用的规则名称，属性值表示该规则的错误级别和其他选项。</p><p>规则错误等级</p><ul><li><code>&quot;off&quot;</code>或0：关闭规则</li><li><code>&quot;warn&quot;</code>或1：打开规则，并作为一个警告，不影响exit code</li><li><code>&quot;error&quot;</code>或2：打开规则，并作为一个错误，exit code将会是1</li></ul><p>在 rules 中，默认可以配置的规则就是 ESLint内置的规则，当使用了其他类型的解析器及对应的插件后，就可以配置对应的规则。</p><p>以下是几个常用解析器对应的规则集，使用前请安装和配置对应的解析器：</p><ul><li><a href="https://eslint.org/docs/latest/rules/" target="_blank" rel="noreferrer">ESLint 内置规则</a></li><li><a href="https://typescript-eslint.io/rules/" target="_blank" rel="noreferrer">typescript-eslint 规则</a></li><li><a href="https://eslint.vuejs.org/rules/" target="_blank" rel="noreferrer">eslint-plugin-vue 规则</a></li></ul><br><h2 id="常用插件及规则集" tabindex="-1">常用插件及规则集 <a class="header-anchor" href="#常用插件及规则集" aria-label="Permalink to &quot;常用插件及规则集&quot;">​</a></h2><p>本节提到的规则集，都整理到了<a href="https://github.com/yun8711/fe-configuration/tree/master/examples/eslint" target="_blank" rel="noreferrer">仓库</a>中</p><h3 id="eslint" tabindex="-1"><a href="https://eslint.org/docs/latest/rules/" target="_blank" rel="noreferrer">eslint</a> <a class="header-anchor" href="#eslint" aria-label="Permalink to &quot;[eslint](https://eslint.org/docs/latest/rules/)&quot;">​</a></h3><p>eslint 官方内置的规则集，无需安装额外依赖，文件位于 <code>node_modules/@eslint/js/src/configs</code></p><ul><li><code>eslint:recommended</code>：开启ESLint内置的推荐规则（官方规则文档中打勾的）</li><li><code>eslint:all</code>：开启ESLint 内置的所有规则</li></ul><br><h3 id="eslint-plugin-prettier" tabindex="-1"><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fprettier%2Feslint-plugin-prettier" target="_blank" rel="noreferrer">eslint-plugin-prettier</a> <a class="header-anchor" href="#eslint-plugin-prettier" aria-label="Permalink to &quot;[eslint-plugin-prettier](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fprettier%2Feslint-plugin-prettier)&quot;">​</a></h3><p>辅助Eslint可以平滑地与Prettier一起协作，并将Prettier的解析作为Eslint的一部分，在最后的输出可以给出修改意见，当Prettier格式化代码的时候，依然能够遵循我们的Eslint规则，所以一般会使用下面的 eslint-config-prettier 禁用掉所有的格式化相关的规则。</p><h3 id="eslint-config-prettier" tabindex="-1"><a href="https://github.com/prettier/eslint-plugin-prettier" target="_blank" rel="noreferrer">eslint-config-prettier</a> <a class="header-anchor" href="#eslint-config-prettier" aria-label="Permalink to &quot;[eslint-config-prettier](https://github.com/prettier/eslint-plugin-prettier)&quot;">​</a></h3><p>该插件会把 prettier 的规则集成到 eslint，避免 prettier 和其他 lint 工具对样式格式化时冲突，常规的使用，先安装依赖，然后在 eslintrc 中配置</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">plugins</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prettier</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">rules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">prettier/prettier</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>也可以使用推荐配置</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">extends</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">plugin:prettier/recommended</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>它的内部配置如下</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">extends</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prettier</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">plugins</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prettier</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">rules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">prettier/prettier</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">arrow-body-style</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">off</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">prefer-arrow-callback</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">off</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><br><h3 id="typescript-eslint-eslint-plugin" tabindex="-1"><a href="https://typescript-eslint.io/rules/" target="_blank" rel="noreferrer">@typescript-eslint/eslint-plugin</a> <a class="header-anchor" href="#typescript-eslint-eslint-plugin" aria-label="Permalink to &quot;[@typescript-eslint/eslint-plugin](https://typescript-eslint.io/rules/)&quot;">​</a></h3><p>typescript-eslint 为 eslint 提供的关于 typescript 代码的规则集，可以在 <code>node_modules/@typescript-eslint/eslint-plugin/dist/configs</code>中看到，其中有两个比较基础的配置：</p><ul><li><p>base.js：一个最小规则集，仅包含最基础配置，是所有配置的基础，保证 typescript-eslint可以正常运行</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">parser</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@typescript-eslint/parser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">parserOptions</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">sourceType</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@typescript-eslint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div></li><li><p><code>eslint-recommended</code>：主要作用是关闭部分与 ts 冲突的 eslint 规则</p></li></ul><p>base.js + eslint-recommended 组件了 typescript-eslint 配置的基础，官方推荐的配置中，基本都继承了这两个基础配置。</p><p>官方推荐的配置有：</p><ul><li><code>recommended</code>：保证代码正确性的推荐规则，避免不良实践和可能的逻辑错误，同时禁用了与 typescript-eslint 规则和 ts 语法冲突的规则</li><li><code>recommended-type-checked</code>：包含 recommended ，增加了推荐的类型检查相关规则</li><li><code>strict</code>：包含 recommended ，增加了更加严格的规则检查</li><li><code>strict-type-checked</code>：recommended + recommenden-type-checked + strict，并增加了更严格的类型检查规则</li><li><code>stylistic</code>：包含 recommended，ts 代码的最佳实践，不影响逻辑，通常用于执行更简单的代码模式。</li><li><code>stylistic-type-checked</code>：包含 stylistic，增加了类型检查规则，和样式规则，</li></ul><p>其他配置：</p><ul><li><code>all</code>：启用所有规则，不建议使用</li><li><code>disable-type-checked</code>：禁用类型检查</li></ul><br><h3 id="eslint-plugin-vue" tabindex="-1"><a href="https://eslint.vuejs.org/rules/" target="_blank" rel="noreferrer">eslint-plugin-vue</a> <a class="header-anchor" href="#eslint-plugin-vue" aria-label="Permalink to &quot;[eslint-plugin-vue](https://eslint.vuejs.org/rules/)&quot;">​</a></h3><p>用于 vue 文件的解析和检查，它的 base 中提供了如下配置，指定的 parser</p><ul><li><code>plugin:vue/base</code>：是下面所有配置的基础，指定了 parser、plugins，让vue文件可以正确的被eslint解析</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">parser</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> require</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue-eslint-parser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">parserOptions</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">ecmaVersion</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2020</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">sourceType</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">env</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">browser</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">es6</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">rules</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">vue/comment-directive</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">vue/jsx-uses-vars</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><ul><li>以下适用于vue3： <ul><li><code>plugin:vue/vue3-essential</code>：增加防止错误或意外行为的规则</li><li><code>plugin:vue/vue3-strongly-recommended</code>：在上面的规则基础上，增加提高代码可读性和最佳实践的规则</li><li><code>plugin:vue/vue3-recommended</code>：在上面的规则基础上，增加提高代码可读性和最佳实践的规则</li></ul></li><li>以下适用于vue2： <ul><li><code>plugin:vue/essential</code>：在base基础上，增加防止错误或意外行为的规则</li><li><code>plugin:vue/strongly-recommended</code>：在上面的规则基础上，增加提高代码可读性和最佳实践的规则</li><li><code>plugin:vue/recommended</code>：在上面的规则基础上，增加提高代码可读性和最佳实践的规则</li></ul></li></ul><br><h3 id="eslint-plugin-react" tabindex="-1"><a href="https://github.com/jsx-eslint/eslint-plugin-react" target="_blank" rel="noreferrer">eslint-plugin-react</a> <a class="header-anchor" href="#eslint-plugin-react" aria-label="Permalink to &quot;[eslint-plugin-react](https://github.com/jsx-eslint/eslint-plugin-react)&quot;">​</a></h3><p>react 为 eslint 制定的规则集（从配置的角度讲，react 比 vue 简单很多）</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">extends</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: [</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint:recommended</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">plugin:react/recommended</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ？？ react 17+，新的 jsx 转换</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">plugin:react/jsx-runtim</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  ]</span></span></code></pre></div><h3 id="其他增强插件" tabindex="-1">其他增强插件 <a class="header-anchor" href="#其他增强插件" aria-label="Permalink to &quot;其他增强插件&quot;">​</a></h3><p>在 npm上可以找到约 6487 个<code>eslint-plugin</code> 开头的<a href="https://www.npmjs.com/search?q=eslint-plugin" target="_blank" rel="noreferrer">插件</a>，生态相当丰富，比如</p><ul><li><a href="https://www.npmjs.com/package/eslint-plugin-import" target="_blank" rel="noreferrer">eslint-plugin-import</a>：检查 es6+的 import/export 语法，防止文件路径和导入名称错误</li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fevcohen%2Feslint-plugin-jsx-a11y" target="_blank" rel="noreferrer">eslint-plugin-jsx-a11y</a>：专注于检查JSX元素的可访问性</li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fjest-community%2Feslint-plugin-jest" target="_blank" rel="noreferrer">eslint-plugin-jest</a>：Jest专用的Eslint规则校验插件</li><li><a href="https://link.juejin.cn/?target=" target="_blank" rel="noreferrer">eslint-plugin-promise</a>：promise规范写法检查插件，附带了一些校验规则</li><li><a href="https://ota-meshi.github.io/eslint-plugin-jsonc/#features" target="_blank" rel="noreferrer">eslint-plugin-jsonc</a>：用于检查 JSON、JSONC、JSON5文件</li><li><a href="https://future-architect.github.io/eslint-plugin-vue-scoped-css/" target="_blank" rel="noreferrer">eslint-plugin-vue-scoped-css</a>：检查 vue 中使用 scoped css</li><li><a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fstandard%2Feslint-config-standard" target="_blank" rel="noreferrer">eslint-config-standard</a>：js 标准代码规范</li><li><a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fairbnb%2Fjavascript%2Ftree%2Fmaster%2Fpackages%2Feslint-config-airbnb-base" target="_blank" rel="noreferrer">eslint-config-airbnb-base</a>：airbab 的 JS 代码规范；</li></ul><h2 id="示例项目" tabindex="-1">示例项目 <a class="header-anchor" href="#示例项目" aria-label="Permalink to &quot;示例项目&quot;">​</a></h2><p>vue2：<a href="https://github.com/vueComponent/ant-design-vue/blob/1.x/.eslintrc" target="_blank" rel="noreferrer">ant-design-vue v1.x</a></p><p>vue3+ts：<a href="https://github.com/element-plus/element-plus/blob/dev/internal/eslint-config/index.js" target="_blank" rel="noreferrer">element-plus</a> <a href="https://github.com/vueComponent/ant-design-vue/blob/main/.eslintrc.js" target="_blank" rel="noreferrer">ant-design-vue v4</a> <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/internal/eslint-config" target="_blank" rel="noreferrer">vue-vben-admin</a></p><p>react：<a href="https://github.com/ant-design/ant-design/blob/master/.eslintrc.js" target="_blank" rel="noreferrer">ant-design v5</a></p><p>eslint 综合：<a href="https://github.com/AlloyTeam/eslint-config-alloy" target="_blank" rel="noreferrer">腾讯 - eslint-config-alloy</a></p><h3 id="常见错误" tabindex="-1">常见错误 <a class="header-anchor" href="#常见错误" aria-label="Permalink to &quot;常见错误&quot;">​</a></h3><p>启动项目等运行 eslint 时，控制台报错：<code>TypeError: prettier.resolveConfig.sync is not a function</code></p><p>原因：<code>prettier</code> 3 和 <code>eslint-plugin-prettier</code> 4 不兼容</p><p>解决：安装 eslint-plugin-prettier 5</p>`,125),o=[p];function t(r,c,i,D,F,y){return n(),l("div",null,o)}const d=s(e,[["render",t]]);export{B as __pageData,d as default};
