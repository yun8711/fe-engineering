import{_ as s,v as a,b as t,R as e}from"./chunks/framework.8277b2e6.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep","prev":false,"next":false},"headers":[],"relativePath":"pkgs/escape-html.md","filePath":"pkgs/escape-html.md","lastUpdated":1707047648000}'),l={name:"pkgs/escape-html.md"},n=e(`<h1>escape-html</h1><p>v1.0.3</p><p><a href="https://www.npmjs.com/package/escape-html" target="_blank" rel="noreferrer">npm</a> | <a href="https://github.com/component/escape-html" target="_blank" rel="noreferrer">github</a></p><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>将文本转义为字符串，可以插入到 html 中</p><h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h2><p>安装</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">pnpm add escape-html</span></span></code></pre></div><p>示例</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> escapeHtml </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">escape-html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// example values</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> desc </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">I &lt;b&gt;think&lt;/b&gt; this is good.</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> fullName </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">John &quot;Johnny&quot; Smith</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dir</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;input name=&quot;full_name&quot; value=&quot;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">escapeHtml</span><span style="color:#BABED8;">(fullName) </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&quot;&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// -&gt; &#39;&lt;input name=&quot;full_name&quot; value=&quot;John &amp;quot;Johnny&amp;quot; Smith&quot;&gt;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dir</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;textarea name=&quot;desc&quot;&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">escapeHtml</span><span style="color:#BABED8;">(desc) </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;/textarea&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// -&gt; &#39;&lt;textarea name=&quot;desc&quot;&gt;I &amp;lt;b&amp;gt;think&amp;lt;/b&amp;gt; this is good.&lt;/textarea&gt;&#39;</span></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="escapehtml-string" tabindex="-1">escapeHtml(string) <a class="header-anchor" href="#escapehtml-string" aria-label="Permalink to &quot;escapeHtml(string)&quot;">​</a></h3><p>此模块导出单个函数： <code>escapeHtml</code> ，该函数用于把给定的文本字符串中的特殊字符（ <code>&quot;</code> 、 <code>&amp;</code> 、 <code>&lt;</code> 、 <code>&#39;</code> 、 <code>&gt;</code> ）进行转义，以便可以在 HTML 内容中插值。</p><p><strong>注意：</strong></p><p>1、转义值只适合作为元素的文本内容插入到 HTML 中，其中的标签不能有不同的转义机制</p><p>例如，它不能放在<code>&lt;style&gt;</code> 或 <code>&lt;script&gt;</code> 中，因为这些内容正文不是 HTML，而是 CSS 和 JavaScript，这些在 HTML 标准中被称为 &quot;raw text elements&quot;（原始文本元素）。</p><blockquote><p>在HTML标准中，&quot;raw text elements&quot; 意指元素内容应当被视为原始文本，而不会被解释为HTML标签或其他元素。因此它们适用于显示如代码示例、文本文件内容等不需要HTML解释的文本。这些元素通常包括 <code>&lt;script&gt;</code>、<code>&lt;style&gt;</code> 和 <code>&lt;textarea&gt;</code>。</p><br><p>需要注意的是，<code>&lt;script&gt;</code>和<code>&lt;style&gt;</code>元素中的内容通常是被解释的，但它们有一些特殊规则和上下文，使得它们被视为&quot;raw text&quot;，而不会触发HTML解释器。这允许在这些元素中包含JavaScript代码和CSS样式表，而不会被视为普通的HTML元素。</p></blockquote><p>2、在标签中使用转义值时，仅适用于属性的值，该值被双引号 或单引号包裹</p>`,18),o=[n];function p(c,r,i,D,y,d){return a(),t("div",null,o)}const F=s(l,[["render",p]]);export{h as __pageData,F as default};
