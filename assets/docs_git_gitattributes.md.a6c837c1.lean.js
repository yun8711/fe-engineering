import{_ as e,v as t,b as s,R as a}from"./chunks/framework.8277b2e6.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep","prev":false,"next":false},"headers":[],"relativePath":"docs/git/gitattributes.md","filePath":"docs/git/gitattributes.md","lastUpdated":1697046453000}'),l={name:"docs/git/gitattributes.md"},i=a(`<h1>.gitattributes</h1><p>npm v9.8.0 node v20</p><p><a href="https://git-scm.com/docs/gitattributes" target="_blank" rel="noreferrer">官方文档</a></p><p>参阅：<a href="https://github.com/element-plus/element-plus/blob/dev/.gitattributes" target="_blank" rel="noreferrer">element-plus</a> | <a href="https://github.com/vitejs/vite/blob/main/.gitattributes" target="_blank" rel="noreferrer">vite</a></p><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p><code>.gitattributes</code> 是 Git 版本控制系统中的一个配置文件，用于管理在版本控制下的文本文件的属性和行为。通常存储在 Git 仓库的根目录或者特定子目录中。它可以定义以下内容：</p><ul><li>文本文件的属性：比如换行符类型、编码等。</li><li>Git 忽略规则：比如忽略某些文件或文件夹、对文件名进行匹配等。</li><li>Git diff 和 merge 行为：比如合并冲突时选用哪个版本的文件等。</li></ul><p>语法类似于 <code>.gitignore</code> 文件，由一系列模式组成，每个模式占据一行，用于描述要应用的属性或规则。例如：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">*.txt    text</span></span>
<span class="line"><span style="color:#babed8;">*.png    binary</span></span>
<span class="line"><span style="color:#babed8;">*.md     text eol=lf</span></span></code></pre></div><p>上面的例子表示：</p><ul><li>所有的 <code>.txt</code> 文件都被视为文本文件（默认值是二进制）；</li><li>所有的 <code>.png</code> 文件都被视为二进制文件（不需要任何转换）；</li><li>所有的 <code>.md</code> 文件都被视为文本文件，并采用 LF 换行符（而不是默认的 CRLF）。</li></ul><p><code>.gitattributes</code> 文件的使用可以提高 Git 仓库中文本文件的可移植性和可维护性，因为它可以确保在不同操作系统和环境中，文件属性的一致性和预期行为。</p><h2 id="常用配置" tabindex="-1">常用配置 <a class="header-anchor" href="#常用配置" aria-label="Permalink to &quot;常用配置&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">* text=auto</span></span></code></pre></div><p>表示 Git 将根据内容自动检测文件是否为文本文件，告诉 Git 在执行差异比较或合并操作时以文本模式处理文件。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">* eol=lf</span></span></code></pre></div><p>表示使用 LF（Unix/Linux 风格）行尾格式。这个属性告诉 Git 在检出文件时将行尾格式设置为 LF，可选项有：</p><ul><li><code>lf</code>：推荐，使用 LF（Unix/Linux 风格）行尾格式</li><li><code>crlf</code>：使用 CRLF（Windows 风格）行尾格式。</li><li><code>cr</code>：使用 CR（旧版 Mac 风格）行尾格式。</li></ul><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><p><a href="https://github.com/ElemeFE/element/blob/dev/.gitattributes" target="_blank" rel="noreferrer">element-ui</a></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">test/**/*.js linguist-language=Vue</span></span></code></pre></div><p>指定了所有test文件夹下的.js文件的语言类型为Vue。其中，<code>**</code>表示匹配任意子目录，<code>*</code>表示匹配任意文件名</p><p>这个规则可以让Linguist正确地识别Vue.js测试文件，并将其标记为Vue语言类型，从而在GitHub上为代码库提供更好的语言统计信息和高亮显示。</p><p><a href="https://github.com/element-plus/element-plus/blob/dev/.gitattributes" target="_blank" rel="noreferrer">element-plus</a></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">* text=auto eol=lf</span></span>
<span class="line"><span style="color:#babed8;">*.ts linguist-detectable=false</span></span>
<span class="line"><span style="color:#babed8;">*.css linguist-detectable=false</span></span>
<span class="line"><span style="color:#babed8;">*.scss linguist-detectable=false</span></span>
<span class="line"><span style="color:#babed8;">*.js linguist-detectable=true</span></span>
<span class="line"><span style="color:#babed8;">*.vue linguist-detectable=true</span></span></code></pre></div><ul><li><code>* text=auto eol=lf</code>: 这个规则设置了所有文件都使用自动文本模式，并将换行符统一转换为LF（Unix风格）格式。</li><li><code>*.ts linguist-detectable=false</code>: 这个规则指定了所有.ts类型的文件不可被Linguist识别，即如果该文件包含在代码库中，GitHub将不会将其计入语言统计信息或进行高亮显示。</li><li><code>*.css linguist-detectable=false</code> 和 <code>*.scss linguist-detectable=false</code>: 这两个规则指定了所有.css和.scss类型的文件也不可被Linguist识别。</li><li><code>*.js linguist-detectable=true</code> 和 <code>*.vue linguist-detectable=true</code>: 这两个规则指定了所有.js和.vue类型的文件可以被Linguist识别。这意味着如果该文件包含在代码库中，GitHub将能够正确地将其分类为JavaScript或Vue.js，并计入相应的语言统计信息和高亮显示。</li></ul>`,26),n=[i];function o(c,p,d,r,u,b){return t(),s("div",null,n)}const m=e(l,[["render",o]]);export{h as __pageData,m as default};
