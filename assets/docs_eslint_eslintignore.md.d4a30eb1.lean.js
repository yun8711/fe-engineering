import{_ as s,v as n,b as a,R as o}from"./chunks/framework.8277b2e6.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/eslint/eslintignore.md","filePath":"docs/eslint/eslintignore.md","lastUpdated":1710644343000}'),e={name:"docs/eslint/eslintignore.md"},l=o(`<h1>忽略文件配置</h1><h2 id="eslintignore-文件" tabindex="-1">.eslintignore 文件 <a class="header-anchor" href="#eslintignore-文件" aria-label="Permalink to &quot;.eslintignore 文件&quot;">​</a></h2><p>可以在项目的根目录下创建 <code>.eslintignore</code> 文件来指定要忽略哪些文件和目录，该文件是一个纯文本文件，其中每一行都是一个 glob 模式，表示哪些路径应该被省略掉。</p><p>Glob 使用 <a href="https://github.com/kaelzhang/node-ignore" target="_blank" rel="noreferrer">node-ignore</a> 进行匹配，因此有许多特性：</p><ul><li>以 <code>#</code> 开头的行被视为注释</li><li>路径是相对于当前工作目录的，这也适用于通过 <code>--ignore-pattern</code><a href="https://zh-hans.eslint.org/docs/latest/use/command-line-interface#--ignore-pattern" target="_blank" rel="noreferrer">命令</a>传递的路径。</li><li>前面有 <code>!</code> 的行是否定模式，重新包括被先前模式忽略的模式。</li><li>忽略模式的行为与 <code>.gitignore</code> <a href="https://git-scm.com/docs/gitignore" target="_blank" rel="noreferrer">规范</a>一致</li><li>必须使用正斜杠（<code>/</code>）作为路径分隔符</li></ul><p>参阅 <a href="https://git-scm.com/docs/gitignore" target="_blank" rel="noreferrer"><code>.gitignore</code></a> 的规范，了解更多有效的语法实例</p><p>通过 eslint 的 <code>--ignore-path</code>可以指定特定的忽略配置文件</p><h2 id="package-json-中的-eslintignore" tabindex="-1">package.json 中的 eslintIgnore <a class="header-anchor" href="#package-json-中的-eslintignore" aria-label="Permalink to &quot;package.json 中的 eslintIgnore&quot;">​</a></h2><p>也可以在 <code>package.json</code> 中的 <code>eslintIgnore</code> 指定要忽略检查的文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mypackage</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.0.1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslintConfig</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">browser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslintIgnore</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">world.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="行内注释" tabindex="-1">行内注释 <a class="header-anchor" href="#行内注释" aria-label="Permalink to &quot;行内注释&quot;">​</a></h2><p>eslint 也提供了一些行内注释，允许对局部代码进行忽略</p>`,12),p=[l];function t(r,c,i,F,D,y){return n(),a("div",null,p)}const u=s(e,[["render",t]]);export{g as __pageData,u as default};
