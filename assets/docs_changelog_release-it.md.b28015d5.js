import{_ as s,v as a,b as o,R as n}from"./chunks/framework.8277b2e6.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep","prev":false,"next":false},"headers":[],"relativePath":"docs/changelog/release-it.md","filePath":"docs/changelog/release-it.md","lastUpdated":1710306671000}'),l={name:"docs/changelog/release-it.md"},e=n(`<h1>release-it</h1><p>v16.1.3</p><p><a href="https://github.com/release-it/release-it" target="_blank" rel="noreferrer">github</a> | <a href="https://github.com/release-it/release-it/tree/main/docs" target="_blank" rel="noreferrer">文档</a></p><p>示例：<a href="https://github.com/axios/axios/blob/v1.x/package.json" target="_blank" rel="noreferrer">axios</a></p><p>参阅：<a href="https://segmentfault.com/a/1190000039813329#item-4" target="_blank" rel="noreferrer">自动产出 changelog-第二节</a> <a href="https://segmentfault.com/a/1190000040567141" target="_blank" rel="noreferrer">第三节</a></p><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>release-it 用于简化发布流程并管理软件版本号，提供了一种易于使用的方法来自动升级版本号、生成变更日志、创建 git tag、上传文件到 npm 等操作，并且可以轻松地扩展和配置。</p><p>支持集成多种发布渠道和工具，例如 git、npm、GitHub、Slack 等，适合用于各种项目的版本控制和发布管理。</p><p>基于插件机制，将不同功能模块的配置通过不同的插件来处理，</p><br><p>使用过程中发现它有几个特点：</p><ul><li>release-it 会把 package.json 中的 version 当作上一个版本号，然后根据 commit 信息自动计算应该升级的版本号</li><li>通过插件的方式控制各个功能的开启/停用，配置简单，易于控制，扩展性好</li><li>release-it 提供的交互式的过程，通过命令行参数 --ci，可以进入静默模式</li><li>在 release-it 升级版本的最后一步，会把当前项目中所有未提交的文件全部 comiit</li></ul><h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h2><p>使用 <code>npx release-it</code> 可以直接在项目中运行，但是默认情况下，它会要求你进行 npm log 等一系列操作，以便进行自动化发布，所以还是推荐在项目中安装，添加配置文件进行定制，在 npm scripts 中添加执行脚本。</p><p>官方推荐的初始化命令 <code>npm init release-it</code>，会让你选择把配置放在<code>.release-it.json</code>中，还是放在 package.json 中。注意：如果当前项目使用 pnpm 安装了依赖，再执行该命令时会失败。</p><p><strong>推荐以下方式使用</strong></p><p>全局或项目中安装均可：<code>pnpm add release-it -D</code></p><p>在 package.js 中添加 script：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my-package</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">release</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">release-it</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">devDependencies</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">release-it</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^15.10.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>在项目下添加 <code>.release-it.js</code>（其他类型也可以）配置文件，并按需求添加配置</p><h2 id="插件" tabindex="-1">插件 <a class="header-anchor" href="#插件" aria-label="Permalink to &quot;插件&quot;">​</a></h2><p>release-it 内置了以下几个<a href="https://github.com/release-it/release-it/tree/main/lib/plugin" target="_blank" rel="noreferrer">插件</a>，不需要额外安装，在配置文件中也可以直接配置：</p><ul><li>git：当前项目下有 <code>.git</code> 目录时，会启用该插件，也可以通过配置自定义</li><li>github：当配置项中的 github.release 为 true 时启用，控制与 github 相关的行为</li><li>gitlab：当配置项中的 gitlab.release 为true 时启用，控制与 gitlab 相关的行为</li><li>npm：查找当前项目下的 package.json，控制与 npm 相关的行为</li><li>version：始终启用，用来在版本升级时进行提示</li></ul><p>其他一些插件需要单独安装，配置时需要在配置文件的 plugins 中单独配置，常见的有：</p><ul><li><a href="https://github.com/release-it/bumper" target="_blank" rel="noreferrer">@release-it/bumper</a>：从任意文件中读写版本号</li><li><a href="https://github.com/release-it/conventional-changelog" target="_blank" rel="noreferrer">@release-it/conventional-changelog</a>：用于遵循 angular 规范的项目，生成与conventional-changelog-cli相同的 changelog 文件，配置方式也相同</li><li><a href="https://github.com/release-it/keep-a-changelog" target="_blank" rel="noreferrer">@release-it/keep-a-changelog</a>：使用 keep-a-changelog 标准的 commits 生成 changelog</li><li><a href="https://github.com/release-it-plugins/lerna-changelog" target="_blank" rel="noreferrer">@release-it-plugins/lerna-changelog</a>：将 lerna-changelog 集成到 release-it 中</li><li><a href="https://github.com/release-it-plugins/workspaces" target="_blank" rel="noreferrer">@release-it-plugins/workspaces</a>：按工作区进行配置和发布</li><li><a href="https://github.com/casmith/release-it-calver-plugin" target="_blank" rel="noreferrer">release-it-calver-plugin</a>：使用release-it启用日历版本控制（calver）</li><li><a href="https://github.com/grupoboticario/news-fragments" target="_blank" rel="noreferrer">@grupoboticario/news-fragments</a>：生成变更日志文件的简单方法</li><li><a href="https://github.com/j-ulrich/release-it-regex-bumper" target="_blank" rel="noreferrer">@j-ulrich/release-it-regex-bumper</a>：基于正则表达式的版本读/写插件</li></ul><p>可以在 npm 上查看<a href="https://www.npmjs.com/search?q=keywords:release-it-plugin" target="_blank" rel="noreferrer">所有release-it 插件</a></p><h2 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h2><p><a href="./release-it-example">默认配置</a></p><p>支持的配置文件名列表：</p><ul><li><code>.release-it.json</code></li><li><code>.release-it.js</code>（或者<code>.cjs</code>；导出配置对象<code>module.exports = {}</code>：）</li><li><code>.release-it.yaml</code>（或<code>.yml</code>）</li><li><code>.release-it.toml</code></li><li><code>package.json</code>（属性名为<code>release-it</code>）</li></ul><h3 id="git配置" tabindex="-1"><a href="https://github.com/release-it/release-it/blob/HEAD/docs/git.md" target="_blank" rel="noreferrer">git配置</a> <a class="header-anchor" href="#git配置" aria-label="Permalink to &quot;[git配置](https://github.com/release-it/release-it/blob/HEAD/docs/git.md)&quot;">​</a></h3><p>release-it 内置的 git 插件，默认会执行以下操作：</p><ol><li>先决条件检查：git.requireBranch、git.requireCleanWorkingDir、git.requireUpstream、git.requireCommits</li><li>项目文件可能通过其他插件或用度命令或 hook 进行更新</li><li>执行：<code>git add . --update</code>，所以每次都会提交所有文件，没发现怎么跳过</li><li>执行：<code>git commit -m &quot;[git.commitMessage]&quot;</code></li><li>执行：<code>git tag --annotate --message=&quot;[git.tagAnnotation]&quot; [git.tagName]</code></li><li>执行：<code>git push [git.pushArgs] [git.pushRepo]</code></li></ol><h3 id="release-it-conventional-changelog" tabindex="-1"><a href="https://www.npmjs.com/package/@release-it/conventional-changelog" target="_blank" rel="noreferrer">@release-it/conventional-changelog</a> <a class="header-anchor" href="#release-it-conventional-changelog" aria-label="Permalink to &quot;[@release-it/conventional-changelog](https://www.npmjs.com/package/@release-it/conventional-changelog)&quot;">​</a></h3><p>让 release-it 生成符合 conventional-changelog 格式的 changelog 文件，配置项会传递给 <a href="https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-recommended-bump#readme" target="_blank" rel="noreferrer">conventional-recommended-bump</a> and <a href="https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-core#api" target="_blank" rel="noreferrer">conventional-changelog-core</a>，有：</p><p><strong><code>preset</code></strong>：指定预设，如 conventional-changelog 内置的 angular，也可以自定义，可用配置项见 <a href="https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.1.0/README.md" target="_blank" rel="noreferrer">conventional-changelog-config-spec</a></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">&quot;preset&quot;: {</span></span>
<span class="line"><span style="color:#babed8;">        &quot;name&quot;: &quot;conventionalcommits&quot;,</span></span>
<span class="line"><span style="color:#babed8;">        &quot;types&quot;: [</span></span>
<span class="line"><span style="color:#babed8;">          {&quot;type&quot;: &quot;feat&quot;, &quot;section&quot;: &quot;✨ Features | 新功能&quot;},</span></span>
<span class="line"><span style="color:#babed8;">          {&quot;type&quot;: &quot;fix&quot;, &quot;section&quot;: &quot;🐛 Bug Fixes | Bug 修复&quot;},</span></span>
<span class="line"><span style="color:#babed8;">          {&quot;type&quot;: &quot;perf&quot;, &quot;section&quot;:&quot;⚡ Performance Improvements | 性能优化&quot;},</span></span>
<span class="line"><span style="color:#babed8;">          {&quot;type&quot;: &quot;revert&quot;, &quot;section&quot;:&quot;⏪ Reverts | 回退&quot;},</span></span>
<span class="line"><span style="color:#babed8;">          {&quot;type&quot;: &quot;chore&quot;, &quot;section&quot;:&quot;📦 Chores | 其他更新&quot;},</span></span>
<span class="line"><span style="color:#babed8;">          {&quot;type&quot;: &quot;docs&quot;, &quot;section&quot;:&quot;📝 Documentation | 文档&quot;},</span></span>
<span class="line"><span style="color:#babed8;">          {&quot;type&quot;: &quot;style&quot;, &quot;section&quot;:&quot;💄 Styles | 风格&quot;, &quot;hidden&quot;: true},</span></span>
<span class="line"><span style="color:#babed8;">          {&quot;type&quot;: &quot;refactor&quot;, &quot;section&quot;:&quot;♻ Code Refactoring | 代码重构&quot;},</span></span>
<span class="line"><span style="color:#babed8;">          {&quot;type&quot;: &quot;test&quot;, &quot;section&quot;:&quot;✅ Tests | 测试&quot;},</span></span>
<span class="line"><span style="color:#babed8;">          {&quot;type&quot;: &quot;build&quot;, &quot;section&quot;:&quot;👷‍ Build System | 构建&quot;},</span></span>
<span class="line"><span style="color:#babed8;">          {&quot;type&quot;: &quot;ci&quot;, &quot;section&quot;:&quot;🔧 Continuous Integration | CI 配置&quot;}</span></span>
<span class="line"><span style="color:#babed8;">        ],</span></span>
<span class="line"><span style="color:#babed8;">      }</span></span></code></pre></div><p><strong><code>infile</code></strong>：默认：undefined，指定 changelog 输出的文件名，如果为 false，则不输出内容</p><p><strong><code>header</code></strong>：changelog 文件的标题</p><p><strong><code>ignoreRecommendedBump</code></strong> ?：默认：false，如果为 true，则忽略推荐的 bump，使用 release-it 提供的版本</p><p><strong><code>strictSemVer</code></strong>：默认：false，是否严格遵守 semver 语义化版本规范</p><p><strong><code>context</code></strong>：默认：undefined，该选项将作为第二个参数 ( <code>context</code>) 传递给 <a href="https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-core#context" target="_blank" rel="noreferrer">convention-changelog-core</a>，</p><p><strong><code>gitRawCommitsOpts</code></strong>：默认：undefined，传递给 <a href="https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/git-raw-commits#api" target="_blank" rel="noreferrer"><code>git-raw-commits</code></a>的选项。</p><p><strong><code>parserOpts</code></strong>：默认：undefined，传递给 <a href="https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#api" target="_blank" rel="noreferrer"><code>conventional-commits-parser</code></a>的选项。</p><p><strong><code>writerOpts</code></strong>：默认：undefined，传递给 <a href="https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-writer#api" target="_blank" rel="noreferrer"><code>conventional-changelog-writer</code></a>的选项。</p><h3 id="hooks" tabindex="-1">hooks <a class="header-anchor" href="#hooks" aria-label="Permalink to &quot;hooks&quot;">​</a></h3><p>通过 hook 配置，可以在发布过程中的任何时候，通过 hook 来执行 shell 命令，格式：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">hooks</span><span style="color:#89DDFF;">:{</span></span>
<span class="line"><span style="color:#F07178;">     [</span><span style="color:#BABED8;">prefix</span><span style="color:#F07178;">]:[</span><span style="color:#BABED8;">hook</span><span style="color:#F07178;">]:</span><span style="color:#89DDFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#F07178;"> 		 [</span><span style="color:#BABED8;">prefix</span><span style="color:#F07178;">]:[</span><span style="color:#BABED8;">plugin</span><span style="color:#F07178;">]:[</span><span style="color:#BABED8;">hook</span><span style="color:#F07178;">]:</span><span style="color:#89DDFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>可用参数有：</p><table><thead><tr><th>part</th><th>value</th></tr></thead><tbody><tr><td>prefix</td><td><code>before</code> or <code>after</code></td></tr><tr><td>plugin</td><td><code>version</code>, <code>git</code>, <code>npm</code>, <code>github</code>, <code>gitlab</code></td></tr><tr><td>hook</td><td><code>init</code>, <code>bump</code>, <code>release</code></td></tr></tbody></table><p>prefix：表示 Hook 执行时机，之前或之后</p><p>plugin：可选，表示hook 作用于某个插件，内置插件可以使用用它的名称；其他插件，使用插件的完整名称</p><p>hook：表示具体的钩子，</p><p>以下是一个配置示例，场景是：不发布到 npm，生成 conventional-changelog 风格的 changelog 文件。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">={</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// npm 相关配置</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">npm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">publish</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">ignoreVersion</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// git相关配置</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">git</span><span style="color:#89DDFF;">:{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">push</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 设置自定义标签</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">tagName</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">v\${version}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 是否使用使用分支的标签来确定最新标签，默认 false，即只考虑主分支</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">getLatestTagFromAllRefs</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 指定release-it 运行时当前分支，可以用数组指定多个</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">requireBranch</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">master</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 只有在master 才可以运行release-it</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 是否在运行release-it之前，保持工作区干净，也就是所有文件已提交</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">requireCleanWorkingDir</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 是否需要上游分支，如果没有上游分支，git push 不知道如何推送。一般在git 未推送到远程前设置为false</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">requireUpstream</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 是否允许空提交，也就是在发新版本前，到上个版本之间，必须有commit，默认为false，即允许空提交</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">requireCommits</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 不允许空提交发版</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 完成升级后，提交的消息</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">commitMessage</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">chore(release): 升级版本 \${version}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">hooks</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// &#39;before:init&#39;: &#39;git fetch --tags&#39;, // 在发布之前获取最新的 git tag</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// &#39;after:bump&#39;: &#39;git commit -am &quot;chore: 升级版本 \${version}&quot; &amp;&amp; git tag v\${version}&#39;, // 在升级版本后创建新的 git tag</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">@release-it/conventional-changelog</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// chnagelog 文件的标题</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">header</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"># Changelog | 变更历史</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// changelog 输出的文件</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">infile</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">CHANGELOG.md</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">preset</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">conventionalcommits</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">types</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">feat</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">✨ Features | 新功能</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fix</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">🐛 Bug Fixes | Bug 修复</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">perf</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">⚡ Performance Improvements | 性能优化</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">revert</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">⏪ Reverts | 回退</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">chore</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">📦 Chores | 其他更新</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">docs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">📝 Documentation | 文档</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">style</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">💄 Styles | 风格</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">hidden</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">refactor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">♻ Code Refactoring | 代码重构</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">✅ Tests | 测试</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">👷‍ Build System | 构建</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ci</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">🔧 Continuous Integration | CI 配置</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">        ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="命令行参数" tabindex="-1">命令行参数 <a class="header-anchor" href="#命令行参数" aria-label="Permalink to &quot;命令行参数&quot;">​</a></h2><p><code>-c --config</code>：指定配置文件路径，默认<code>&quot;.release-it.json&quot;</code></p><p><code>-d --dry-run</code>：试运行，不创建或写入任何命令，只显示指令的执行</p><p><code>-i --increment</code>：增加 &quot;major&quot;、&quot;minor&quot;、&quot;patch&quot; 或 &quot;pre*&quot;版本，也可以指定版本；默认为&quot;patch&quot;</p><p><code>--ci</code>：静默默式，没有提示，没有用户交互。一般在 CI/CD 环境中自动激活，或者每次提交时不想回答问题</p><p><code>--only-version</code>：只提示版本，没有更多的交互</p><p><code>--release-version</code>：打印要发布的版本号</p><p><code>--changelog</code>：打印要发布的 changelog</p><p><code>-V --verbose</code>：打印每个用户定义的 hooks 输出</p><p><code>-VV</code>：额外的详细输出，会打印每个内部命令的输出</p><p>？？--no-npm：跳过 npm publish</p><p>其他大部分命令行参数与配置文件中的配置相对应，比如 git.requireBranch 配置项，在命令行中可写为：<code>--git.requireBranch=main</code>，<code>--no-xxx.xxx</code>，用来表示取反</p><br>`,68),p=[e];function t(r,c,D,F,i,y){return a(),o("div",null,p)}const q=s(l,[["render",t]]);export{g as __pageData,q as default};
