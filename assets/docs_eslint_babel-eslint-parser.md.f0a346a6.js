import{_ as s,v as a,b as n,R as l}from"./chunks/framework.8277b2e6.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/eslint/babel-eslint-parser.md","filePath":"docs/eslint/babel-eslint-parser.md","lastUpdated":1710175002000}'),e={name:"docs/eslint/babel-eslint-parser.md"},o=l(`<h1>插件：@babel/eslint-parser</h1><p>v7.23.10</p><p><a href="https://babeljs.io/docs/babel-parser" target="_blank" rel="noreferrer">官网</a> | <a href="https://github.com/babel/babel/tree/main/eslint/babel-eslint-parser" target="_blank" rel="noreferrer">github</a></p><p><code>@babel/eslint-parser</code>（以前称为 Babylon） 是一个解析器，它允许 ESLint 在由 Babel 转换的源代码上运行。</p><p>ESLint 的默认解析器和核心规则只支持最新的最终 ECMAScript 标准，不支持 Babel 提供的实验性（如新功能）和非标准（如 Flow 或 TypeScript 类型）语法。</p><p>该解析器的特点：</p><ul><li>默认启用的最新 ECMAScript 版本 （ES2020）</li><li>支持 JSX、Flow、Typescript</li><li>支持实验性语言提案（接受至少 stage-0 的任何 PR）</li></ul><p>注意：虽然 <code>@babel/eslint-parser</code> 可以解析 TypeScript，但是不支持在 ESLint 中使用<code>@babel/eslint-parser</code>对 ts 代码进行 linting。一方面是避免与<code>@typescript-eslint</code>做重复的工作，另一方面是无法识别类型。</p><h2 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">​</a></h2><p>1、安装：</p><p><code>pnpm add -D @babel/eslint-parser</code></p><p>2、配置</p><p>在 <code>.eslintrc.js</code> 文件中</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">parser</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@babel/eslint-parser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">parserOptions</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">requireConfigFile</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">babelOptions</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">babelrc</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">configFile</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// your babel options</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">presets</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@babel/preset-env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 其他 ESLint 配置...</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h2 id="解析器配置" tabindex="-1">解析器配置 <a class="header-anchor" href="#解析器配置" aria-label="Permalink to &quot;解析器配置&quot;">​</a></h2><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">parser</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@babel/eslint-parser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">parserOptions</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    ecmaVersion?</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2020</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    sourceType?</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 或者 &quot;script&quot;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">requireConfigFile</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">allowImportExportEverywhere</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">ecmaFeatures</span><span style="color:#89DDFF;">:{</span></span>
<span class="line"><span style="color:#BABED8;">    	globalReturn?</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> boolean </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#BABED8;">;</span></span>
<span class="line"><span style="color:#BABED8;">  	</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">babelOptions</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">babelrc</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">configFile</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">presets</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@babel/preset-env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 其他 ESLint 配置...</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h3 id="ecmaversion" tabindex="-1"><code>ecmaVersion</code> <a class="header-anchor" href="#ecmaversion" aria-label="Permalink to &quot;\`ecmaVersion\`&quot;">​</a></h3><p>默认：2020，指定要使用的 ECMAScript 语法版本，解析器会根据它来确定如何分析代码。</p><p>指定为<code>latest</code>时，表示使用最新版本</p><br><h3 id="sourcetype" tabindex="-1"><code>sourceType</code> <a class="header-anchor" href="#sourcetype" aria-label="Permalink to &quot;\`sourceType\`&quot;">​</a></h3><p>默认：<code>&quot;module&quot;</code>，如果未使用 esm 模块标准，可设置为<code>&quot;script&quot;</code></p><h3 id="requireconfigfile" tabindex="-1"><code>requireConfigFile</code> <a class="header-anchor" href="#requireconfigfile" aria-label="Permalink to &quot;\`requireConfigFile\`&quot;">​</a></h3><p>默认：true，是否关联 bable 配置文件</p><p>如果设置为 false，@babel/eslint-parser 仍然尝试从根目录加载配置文件，如果没有找到配置文件，将不会解析任何实验性语法。</p><br><h3 id="allowimportexporteverywhere" tabindex="-1"><code>allowImportExportEverywhere</code> <a class="header-anchor" href="#allowimportexporteverywhere" aria-label="Permalink to &quot;\`allowImportExportEverywhere\`&quot;">​</a></h3><p>默认：false，设置导入、导出声明允许出现的位置，如果为 true，表示可以出现在任何位置（如果构建环境支持），否则，只能显示的声明在顶层。</p><h3 id="ecmafeatures" tabindex="-1"><code>ecmaFeatures</code> <a class="header-anchor" href="#ecmafeatures" aria-label="Permalink to &quot;\`ecmaFeatures\`&quot;">​</a></h3><p>可选，用于指定你的代码使用了哪些 ECMAScript 的特性，决定了 ts 如何分析源码中的语法，它有以下属性：</p><ul><li>globalReturn：是否允许全局 return 语句，默认 false，当与 <code>sourceType: &quot;script&quot;</code> 一起使用时，允许全局范围内的 return 语句</li></ul><blockquote><p>&quot;全局 return 语句&quot;通常指的是在全局作用域中使用的return语句。在JavaScript和TypeScript中，return语句通常用于函数内部，用于返回函数的结果。如果你在全局作用域（即不在任何函数内部）使用return语句，你将会收到一个错误，因为return语句只能在函数体内使用。</p></blockquote><br><h3 id="babeloptions" tabindex="-1"><code>babelOptions</code> <a class="header-anchor" href="#babeloptions" aria-label="Permalink to &quot;\`babelOptions\`&quot;">​</a></h3><p>默认：<code>{}</code>，一个包含 Babel 配置选项的对象，这些选项在运行时传递给 Babel 的解析器</p><p>此选项告诉解析器像 中 <code>tsconfig.json</code> 设置 <code>emitDecoratorMetadata: true</code> 一样运行，但不进行类型识别 linting。换句话说，在这种情况下，不必指定 <code>parserOptions.project</code> ，从而加快了 linting 过程。</p>`,36),p=[o];function t(r,c,i,D,y,F){return a(),n("div",null,p)}const b=s(e,[["render",t]]);export{d as __pageData,b as default};
