import{_ as n,v as a,b as l,L as p,R as s}from"./chunks/framework.8277b2e6.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep","prev":false,"next":false},"headers":[],"relativePath":"guide/about.md","filePath":"guide/about.md","lastUpdated":1709747010000}'),o={name:"guide/about.md"},e=s(`<h3 id="遇到个问题" tabindex="-1">遇到个问题 <a class="header-anchor" href="#遇到个问题" aria-label="Permalink to &quot;遇到个问题&quot;">​</a></h3><p>当我打开 github 想要学习一下 element-plus 的源码时，我首先看到了这样的目录结构：（隐藏了部分子目录和深层次的目录，实在太多了）</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.circleci</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#FFCB6B;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">config.yml</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.github</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ISSUE_TEMPLATE</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">workflows</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#FFCB6B;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">....很多</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.husky</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">commit-msg</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#FFCB6B;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pre-commit</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.vscode</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">extensions.json</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#FFCB6B;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">settings.json</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">breakings</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2.2</span><span style="color:#C3E88D;">.0</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2.2</span><span style="color:#C3E88D;">.1</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2.2</span><span style="color:#C3E88D;">.3</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#FFCB6B;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">breaking.yml.example</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">docs</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">internal</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">packages</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">play</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">scripts</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ssr-testing</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">typings</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.editorconfig</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.env</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.eslintignore</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.eslintrc.json</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.gitattributes</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.gitignore</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.gitpod.yml</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.markdownlint.json</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.npmrc</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.nvmrc</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.prettierignore</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.prettierrc</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">CHANGELOG.en-US.md</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">CODE_OF_CONDUCT.md</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">CONTRIBUTING.md</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">LICENSE</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">README.md</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">codecov.yml</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">commitlint.config.js</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">commitlint.config.ts</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">global.d.ts</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package.json</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pnpm-lock.yaml</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pnpm-workspace.yaml</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">tsconfig.base.json</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">tsconfig.json</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">tsconfig.play.json</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">tsconfig.vite-config.json</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">tsconfig.vitest.json</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">tsconfig.web.json</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">vitest.config.ts</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">vitest.setup.ts</span></span></code></pre></div><p>不得不承认，虽然平时也比较关注前端工程化，但是看到这些我还是有点懵逼的，有些是经常用的，比如 prettier 的配置 ，还有一些是我知道，但是用的不熟的，比如 <code>tsconfig.xxx.json</code> ，但是为什么会分好几个配置文件，还这么多？还有一些是我完全不知道的，比如 <code>.gitattributes</code> ，应该是跟 git 相关的，但是完全不知道是干吗的。 <br></p><p>工程化配置是整个项目的基石，它决定了项目的开发效率、代码质量、可维护性等等，但是配置文件的数量和复杂性也在不断增长，如果项目周期较长，还会遇到版本升级、迁移等问题。我相信很多人跟我一样，看到这么多配置文件，都会有一种想要逃跑的冲动，但是又不得不面对，因为这就是前端 😂。</p><br><h3 id="想做个网站" tabindex="-1">想做个网站 <a class="header-anchor" href="#想做个网站" aria-label="Permalink to &quot;想做个网站&quot;">​</a></h3><p>一直以来面对前端项目的工程配置，我都有一些疑惑，比如：为什么有的配置可以写在 package.json 中，也可以单独写一个配置文件？每次写 xxxlint 的匹配路径时，使用的是什么语法？eslint 的 parser 配置到底怎么配置？</p><p>直到我看到这份源码的工程配置，我的疑问达到了顶峰，所以我做了这个网站，主要目的是：</p><ul><li>记录自己曾经和以后遇到的工程化方面的问题及经验</li><li>更好的理解各种配置文件，提高开发效率，减少配置困惑</li><li>分享工程化配置方面的经验和心得</li></ul><br>`,11),c=s('<p>对于刚入门的开发者，这里可以为你提供一些关于库/框架的基本说明，让你更好的理解它们的作用和使用方法。对于有一定经验的开发者，欢迎多多反馈。</p><br><h3 id="如何使用本站" tabindex="-1">如何使用本站？ <a class="header-anchor" href="#如何使用本站" aria-label="Permalink to &quot;如何使用本站？&quot;">​</a></h3><p>本站的内容目前都是个人在实际开发中的一些经验的归纳总结，所以可能会有一些不准确的地方，如果你发现了错误或者有更好的建议，欢迎提出 <a href="https://github.com/yun8711/fe-configuration/issues" target="_blank" rel="noreferrer">issue</a></p><p>在 <a href="./../docs/catalogue">文档目录</a> 下，列出了已经收集整理好的配置说明的列表。</p><p>在每篇文档中，首先会列出该库/框架的官网、github、npm 地址，方便你查看官方文档，同时还提供一些优秀项目的链接来学习研究；内容部分会基于个人理解及实际使用情况做一些说明和分享（心虚）。</p><p>在文档中会出现一些标志符号，用它们来标识一些信息：</p><ul><li>⬇️：表示该内容不常用，或者很少见到</li><li>❓：表示该内容有待确认，或者有疑问</li><li>🚫：表示该内容被废弃，不建议使用</li></ul>',8);function t(r,B,y,i,E,D){return a(),l("div",null,[e,p(" 我希望以通过通俗易懂的文字，为每个配置项提供准确的解释，包括其作用、可接受的值范围、默认值以及相关注意事项，为其他开发者提供关于各种插件和库配置文件的使用指南和配置项解释，让前端项目更加高效和稳定。 "),c])}const A=n(o,[["render",t]]);export{F as __pageData,A as default};
